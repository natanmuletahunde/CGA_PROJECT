#lesson 1 :programming for purpose
#In this lesson 1  i have covered some interactive animation and game rapid survey and 
 some game design templates
#in this lesson 2 i have explored tool that lets me draw different colored shapes.
# lesson 3 drawing in game lab
in this lesson 3 level 2
i have Changed the numbers inside the block,  and Tried to place the rectangle near the bottom right of the screen.
rect(381,380);
#lesson 3 level 3
1) Place two rectangles exactly in the corners of the screen
rect(0,0);
#lesson 3 level 4
// 2) Change the color from blue to yellow.
fill("blue");
rect(100,100);
fill("yellow");
rect(250, 100);
fill("yellow");
// 3) Add a new square to the image

rect(200, 200);
#lesson 3 level 5
//2) Change the red rectangle's color to green.
//3) Change the order of the code so the green rectangle appears on top.
fill("green");
rect(200, 200);
fill("blue");
rect(175,175);
#lesson 3 level 6
fill("teal");
ellipse(100,100);
//2) Add a new ellipse of a different color.
fill("yellow");
ellipse(200, 200);
#lesson 3 level 7
drawing car
fill("blue")
rect(150,150)

rect(201,149)

fill("green");
rect(100,200)
rect(150,200)
rect(200,200)
rect(250,200)
fill("red")
ellipse(150,250)
ellipse(249,249)
#lesson 3 level 8 debbuging
//2) Change the code so it makes the picture in the instructions

fill("orange");
ellipse(150,150);
ellipse(200,150);
ellipse(150,200);
ellipse(200,200);
fill("purple");
rect(150, 150);
# lesson 3 level 9 challenge :face
fill("slateblue");
ellipse(123, 182);
ellipse(225, 180);
fill("red");
ellipse(172,270);
fill("green");
rect(49,300);
rect(100,350);
rect(150,350);
rect(200,300);
#lesson 4 level 2
fill("blue");
rect(100,100,100,200);

fill("red");
rect(250,100,100,300);
#lesson 4 level 3
//1) Add an orange ellipse to the screen that is taller than the green one
//2) Rearrange the blocks so the orange ellipse is behind the green one
fill("orange");
ellipse(215,215,215,300);

fill("green");
ellipse(200,200,150,110);
#lesson 4 level 4
background("orange");
fill("purple");
rect(50,50, 100,100);
//2) Change the background from yellow to orange.

fill("blue");
rect(250,250, 100, 100);
#level 5
//1) Make a black background behind the green circle.
background("black");
fill("green");
ellipse(200,200,200,200);
#lev 6
// Draw sky
background("skyblue");

// Draw sun
fill("yellow");
ellipse(350,50,50,50);

// Draw grass
fill("green");
rect(0,300,400, 200);
#lev 7
fill("red");
ellipse(200, 200, 400, 400);
fill("orange");
ellipse(200, 200, 340, 340);
fill("yellow");
ellipse(200, 200, 280, 280);
fill("green");
ellipse(200, 200, 220, 220);
fill("blue");
ellipse(200, 200, 160, 160);
fill("indigo");
ellipse(200, 200, 100, 100);
fill("violet");
ellipse(200, 200, 40, 40);
#lev 8
//1) Debug this program to make the cloud wider than it is tall, like in the image.

// Draw sky
background("skyblue");

// Draw sun
fill("yellow");
ellipse(300,50,50,50);

// Draw grass
fill("green");
rect(0,300,400,100);

// Draw cloud
fill("white");
ellipse(150,100,200,100);
#lev 9
fill("red");
shape(200, 200, 0, 400, 400, 400);
fill("blue");
shape(200, 200, 0, 0, 400, 0);
//2) Finish the code so it matches the picture
fill("yellow");
shape(400, 0, 400, 400, 200, 200);
fill("green");
shape(0, 0, 0, 400, 200, 200);
# lesson 5
lesson 5 lev3
var xPosition = 200;
var whatsTheY = 200;

ellipse(xPosition, whatsTheY);

#level 4 Debug: Naming Variables


var sizeofcircle = 150;
var dimension = 100;
var ylocation = 200;

fill("OrangeRed");
ellipse(dimension, ylocation, sizeofcircle, sizeofcircle);
# level 5 Using a Variable Many Times

This program has only one variable called petalSize but it uses it 8 different times. This makes it easy to quickly make lots of changes to how your picture is drawn.
//1) Update the code so the red petals touch each other
var petalSize = 75;

//Set Up
noStroke();
background("ForestGreen");

// Petals
fill("red");
ellipse(150,200,petalSize,petalSize);
ellipse(200,150,petalSize,petalSize);
ellipse(250,200,petalSize,petalSize);
ellipse(200,250,petalSize,petalSize);

// Flower Center
fill("black");
ellipse(200,200,50,50);
# level 6 Debug: Using Variables

This program uses the variable circleSize to control the width and height of a circle. If you make the circle big enough, it will fill up the entire screen, as in the picture on the righ
hange the value assigned to circleSize so that the circle fills the entire screen.
var circleSize = 560;

fill("Crimson");
ellipse(200, 200, circleSize, circleSize);
# level 7 using Variables

This program currently draws a face, but the eyes are two different sizes. Change the program to use the variable for the size of both eyes, and run the code to make sure both eyes are drawn at the same size.
/2) Change the program to use the eyeSize variable.
var eyeSize = 27;

noStroke();
background("green");

// Face
fill("yellow");
ellipse(200,200,200,200);

// Eyes
fill("black");
ellipse(160,170,eyeSize,eyeSize);
ellipse(240,170,eyeSize,eyeSize);

// Mouth
fill("white");
rect(160,240,80,20);
# level 8 Challenge: Updating Variables
var x = 50;
var y = 50;

fill("red");
ellipse(x, y);
// Increase x by 50, now x is 100
x = x + 50;
ellipse(x, y);
// Increase x by 50, now x is 150
x = x + 50;
ellipse(x, y);
x = x + 50;
ellipse(x, y);
x = x + 50;
ellipse(x, y);
x = x + 50;
ellipse(x, y);
x = x + 50;
ellipse(x, y);
lesson 6 Random Numbers
#level 2
background("tomato");

//1) Change the code so the ellipse can appear anywhere horizontally on the screen
fill("orange");
ellipse(randomNumber(20,40), 200, 50, 50);
#level 3
background("tomato");

//1) Make the ellipse appear at random y coordinates
fill("orange");
ellipse(randomNumber(100,300), 200, 50, 50);
# level 4 Variables and Random Numbers

Variables can be assigned a random number too. This lets you save a single random value so that you can use it as many times as you want in your program.
//1) Make the eyes appear at random sizes
var eyeSize = 27;

noStroke();
background("green");

// Face
fill("yellow");
ellipse(200,200,200,200);

// Eyes
fill("black");
ellipse(randomNumber(160,170),eyeSize,eyeSize);
ellipse (randomNumber(240,170),eyeSize,eyeSize);

// Mouth
fill("white");
rect(160,240,80,20);
#level 5 Changing variable values
var petalSize;
background("green");

//1) Update the first flower's petals to be a random size
petalSize = randomNumber();
// petals
fill("purple");
ellipse(75,100,petalSize,petalSize);
ellipse(125,100,petalSize,petalSize);
ellipse(100,75,petalSize,petalSize);
ellipse(100,125,petalSize,petalSize);
// center
fill("yellow");
ellipse(100,100, 50, 50);

//2) Update the second flower's petals to be a random size
petalSize = randomNumber();
// petals
fill("purple");
ellipse(275,300,petalSize,petalSize);
ellipse(325,300,petalSize,petalSize);
ellipse(300,275,petalSize,petalSize);
ellipse(300,325,petalSize,petalSize);
// center
fill("yellow");
ellipse(300,300, 50, 50);
#level 6 Debug: Random Shape Movement
//2) Update the code so the rectangles appear stacked at random x positions
var xPosition = 100;
fill("pink");
rect(randomNumber(xPosition, 150), 100, 250, 50);
fill("purple");
rect(randomNumber(xPosition, 150), 150, 250, 50);
fill("firebrick");
rect(randomNumber(xPosition, 150), 200, 250, 50);
#level 7
Rainbow Snake
Alexis is working on a program to draw a rainbow snake that "wiggles" each time it's run. She's started the program, but needs help finishing!

//2) Add at least three new different colored circles to your rainbow snake.
//3) Use randomNumber to make the rest of the snake's body move up and down like the first three.

background("skyBlue");

fill("red");
ellipse(100, randomNumber(190,210), 50, 50);

fill("orange");
ellipse(140, randomNumber(190,210), 50, 50);

fill("yellow");
ellipse(180, randomNumber(190,210), 50, 50);
fill("green");
ellipse(220, randomNumber(190,210), 50, 50);
fill("purple");
ellipse(260, randomNumber(190,210), 50, 50);
fill("red");
ellipse(300, randomNumber(190,210), 50, 50);
# level 8
Random Rainbow!
This level uses the rgb() block to set the color of the rainbow. Since the rgb() block uses (Red, Green, Blue) numerical values, it means we can use randomNumber() to generate random colors!
//1) Update the background to be a random color
background(randomNumber(rgb(5, 55, 255)));

//2) Update each arc of the rainbow to a random color
fill(randomNumber(rgb(255,102,102)));
ellipse(200, 200, 400, 400);
fill(randomNumber(rgb(255,178,102)));
ellipse(200, 200, 340, 340);
fill(randomNumber(rgb(255,255,102)));
ellipse(200, 200, 280, 280);
fill(randomNumber(rgb(178,255,102)));
ellipse(200, 200, 220, 220);
fill(randomNumber(rgb(51,153,255)));
ellipse(200, 200, 160, 160);
fill(randomNumber(rgb(153,153,255)));
ellipse(200, 200, 100, 100);
fill(randomNumber(rgb(229,204,255)));
ellipse(200, 200, 40, 40);

//3) Update the ground to a random color
fill(randomNumber(rgb(25, 255, 0)));
rect(0, 200, 400, 200);
#lesson 7 Review the Shape Block
 #level 1
fill("red");
shape(200, 200, 0, 400, 400, 400);
fill("blue");
shape(200, 200, 0, 0, 400, 0);
//2) Finish the code so it matches the picture
fill("yellow");
shape(400, 0, 400, 400, 200, 200);
fill("green");
shape(0, 400, 0, 0, 200, 200);
#level 2
Robot Face
Use at least 4 different shape blocks, at least 4 variables with random numbers to create a robot face with unique and creative features!
// Random variables
var headWidth = randomNumber(100, 200);
var headHeight = randomNumber(150, 250);
var eyeSize = randomNumber(10, 30);
var mouthWidth = randomNumber(50, 100);
var antennaHeight = randomNumber(50, 100);

// Set the background
background("lightblue");

// Head
fill("silver");
rect(100, 100, headWidth, headHeight);

// Eyes
fill("black");
ellipse(140, 150, eyeSize, eyeSize); // Left eye
ellipse(260, 150, eyeSize, eyeSize); // Right eye

// Mouth
fill("red");
rect(150, 250, mouthWidth, 10);

// Antenna
fill("gold");
line(200, 100, 200, 100 - antennaHeight);
triangle(190, 100 - antennaHeight, 200, 80 - antennaHeight, 210, 100 - antennaHeight);

// Ears
fill("gray");
rect(90, 150, 20, 50); // Left ear
#Lesson 8
#lesson 8 level 2
Sprites

Sprites are like containers - they can hold several properties that make it easier to manage our animations and make more complex drawings. Right now, our sprites are just gray rectangular containers.
//1) Create a new sprite variable called sprite1

var sprite1 = createSprite(200, 200);
//2) Draw your sprites on the screen
drawSprites();
##level 3
Debug

This program should create two new sprites, one on the left of the screen and one on the right, but it's only drawing one. You don't need to add any code, just rearrange the code already present to make sure that both sprites show up like the picture on the right.
var leftSprite = createSprite(100, 200);
var rightSprite = createSprite(300, 200);
drawSprites();
#level 4
Investigating Sprites

Let's update the code below so different animations appear for the fruit and vegetable sprites.
How do these blocks work again? (Click here to see)

Do This

    Update the fruit animation
        Use the dropdown menu in the setAnimation() block to select a different sprite to use
    Update the vegetable animation
        Use the dropdown menu in the setAnimation() block to select a different sprite to use
#level 5


    Create a sprite variable called student
        Drag out a createSprite(200, 200) block and change the variable name to student
    Set the animation
        Drag out a setAnimation() block
        Change the first part of the block to be the same name as the variable above: student
        Use the dropdown menu to select different sprites to use as a student
    Draw the sprite on the screen
        Drag out a drawSprites() block
//1) Create a sprite variable
var student= createSprite(200,200);
//2) Set the animation
student.setAnimation("Joseph");

//3) Draw the sprite on the screen
drawSprites();
#level 6
Do This

    Run the code to see what happens.
    Look in the Animation Tab to see what animations are available to you. (Show me where.)
        Feel free to alter your animations or choose a new one.
    Use the setAnimation command to change the look of your other sprites.
var topLeftSprite = createSprite(100, 100);
topLeftSprite.setAnimation("planeRed1");
var topRightSprite = createSprite(300, 100);
topRightSprite.setAnimation("bunny");

var bottomLeftSprite = createSprite(100, 300);
bottomLeftSprite.setAnimation("alien");
var bottomRightSprite = createSprite(300,300);
bottomRightSprite.setAnimation("flyBot");
drawSprites();
#level 7
Do This

    Run the code to see what happens.
    Fix the two problems in the code.

Hint: Just like shapes, sprites are drawn in the order they are created.
var drink = createSprite(100, 200);
drink.setAnimation("soda");
var dessert = createSprite(300, 200);
dessert.setAnimation("ice_cream");
var message = createSprite(200, 200);
message.setAnimation("textGetReady");
drawSprites();
#level 9

var cactus = createSprite(100, 200);
cactus.setAnimation("cactus");
var ladybug = createSprite(250, 320);
ladybug.setAnimation("ladybug");
var snail = createSprite(100, 270);
snail.setAnimation("snail");
var grass2 = createSprite(275, 275);
grass2.setAnimation("grass2");

var grass1 = createSprite(225, 275);
grass1.setAnimation("grass1");



drawSprites();
#level 10
Create your own sprites
Use what you've learned to create your own sprites. The example is just one way to complete the level. Decide for yourself what you want your sprites to look like.
/ 1) Go to the animation tab and add at least two animations to your project.
// 2)In the code tab, create at least two sprites in two different places on the screen.

var baby=createSprite(200,100);
var boy=createSprite(300,50);
// 3) Assign each sprite a different animation.
baby.setAnimation("blue_dress_wave_1");
boy.setAnimation("blue_hanbok_1");
// 4) Draw your sprites to the screen.
drawSprites();

#level 11
Drawing your own image

You can also use the Animation tab to draw your own image. You are going to make your own character by drawing it.
Do This
// Create character sprite and set animation
var character = createSprite(200, 300);
character.setAnimation("animation_1");

// Draw background
background("skyblue");

// Draw grass
fill("green");
noStroke();
rect(0, 300, 400, 100);

// Draw sprite

drawSprites();



